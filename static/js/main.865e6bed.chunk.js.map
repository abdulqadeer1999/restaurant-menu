{"version":3,"sources":["components/list.js","components/alert.js","App.js","reportWebVitals.js","index.js"],"names":["List","items","removeItem","editItem","className","map","item","id","title","type","onClick","Alert","msg","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","App","useState","name","setName","localStorage","getItem","JSON","parse","setList","isEditing","setIsEditing","editId","setEditID","show","alert","setAlert","showAlert","setItem","stringify","onSubmit","e","preventDefault","newItem","Date","getTime","toLocaleString","placeholder","value","onChange","target","length","filter","specificItem","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.865e6bed.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nimport { FaEdit,FaTrash } from 'react-icons/fa';\r\n// import { SourceListMap } from 'source-list-map';\r\n\r\nexport const List = ({items,removeItem,editItem}) => {\r\n    return (\r\n        <div className=\"grocery-list\">\r\n           {\r\n            items.map((item) => {\r\n                const {id,title} = item;\r\n                return <article key={id} className=\"grocery-item\">\r\n                    <p className=\"title\">{title}</p>\r\n                    <div className=\"btn-container\">\r\n                    <button type=\"button\" className=\"edit-btn\" onClick={() => editItem(id)}>\r\n                         <FaEdit />\r\n                    </button>\r\n                    <button type=\"button\" className=\"delete-btn\" onClick={() =>removeItem(id)}>\r\n                         <FaTrash />\r\n                    </button>\r\n                    </div>\r\n                </article>\r\n            })\r\n           }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\nexport const Alert = ({type,msg,removeAlert,list}) => {\r\n\r\n    useEffect (() => {\r\n     const timeout = setTimeout(() => {\r\n      removeAlert()\r\n\r\n     \r\n     },3000)\r\n     return () => clearTimeout(timeout)\r\n    },[list])\r\n    return (\r\n        <div>\r\n            <p className={`alert alert-${type}`}>{msg}</p>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\nimport  {List}  from \"./components/list\"\nimport { Alert } from \"./components/alert\"\nimport './App.css';\n\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem('list');\n  if(list) {\n    return JSON.parse(localStorage.getItem('list'))\n  }else {\n    return []\n  }\n}\n\nfunction App() {\n\n  const [name, setName] = useState('')\n  const [list, setList] = useState(getLocalStorage())\n  const [isEditing, setIsEditing] = useState(false)\n  const [editId, setEditID] = useState(null)\n  const [alert, setAlert] = useState({show:false, msg:\"\",type:\"\"})\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if(!name) {\n      // display alert\n      // setAlert({show:true,msg:\"please enter value\",type:\"danger\"})\n\n      showAlert(true,'danger','please enter value')\n    }\n    else if(name && isEditing){\n      // deal with edit\n\n      setList(list.map((item) => {\n        if(item.id===editId) {\n          return {...item,title:name}\n        }\n       return item\n      }))\n\n       setName('')\n       setEditID(null)\n       setIsEditing(false)\n       showAlert(true,'success','value changed')\n    }else {\n      showAlert(true,'success','item added to the list')\n\n      const newItem = {id: new Date().getTime().toLocaleString(),title:name};\n      setList([...list,newItem]);\n      setName(\"\")\n    }\n  }\n\n\n  const showAlert = (show=false,type=\"\",msg=\"\") => {\n    setAlert({show,type,msg})\n  }\n\n  const clearList = () => {\n    showAlert(true,'danger',\"empty list\")\n    setList('')\n  }\n\n  const removeItem = (id) => {\n    showAlert(true,'danger','item removed')\n    setList(list.filter((item) => item.id !== id))\n  }\n\nconst editItem = (id) => {\n  const specificItem = list.find((item) => item.id === id)\n  setIsEditing(true)\n  setEditID(id)\n  setName(specificItem.title)\n}\n\nuseEffect (() => {\n  localStorage.setItem('list',JSON.stringify(list))\n},[list])\n\n  return (\n\n   <section className=\"section-center\">\n     <form className=\"grocery-form\" onSubmit={handleSubmit}>\n       {alert.show && <Alert {...alert} removeAlert={showAlert} list={list} />}\n       <h3>Grocery Bud</h3>\n\n       <div className=\"form-control\">\n       <input type=\"text\" className=\"grocery\" placeholder=\"e.g eggs\"\n        value={name} onChange={(e) => setName(e.target.value)} />\n       <button type=\"submit\" className=\"submit-btn\">\n         {isEditing ? 'edit' : 'submit'}\n       </button>\n       </div>\n\n     </form>\n\n     {list.length > 0 && \n      <div className=\"grocery-container\">\n      <List items={list} removeItem={removeItem} editItem={editItem} />\n   \n      <button className=\"clear-btn\" onClick={clearList}>Clear Items</button>\n        </div>\n     }\n    \n     </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}